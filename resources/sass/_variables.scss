$white: #fff;
$black: #000;
$text: #707070;
$bgColor: #ffffff;
$borderColor: #E0E0E0;
$devider: #D5D5D5;
$orange: #FD7D00;
$blue: #0061BF;
$green: rgb(77, 200, 61);
$purple: rgb(57,18,148);
$menu-green: #d6f8db;

$gradient-1: linear-gradient(90deg, rgba(28,104,208,1) 0%, rgba(74,21,166,1) 100%);
$gradient-2: linear-gradient(90deg, rgba(57,18,148,1) 0%, rgba(59,132,232,1) 100%);

//$gradient-header: linear-gradient(90deg, #5af548 0%, #5bbbf3 100%);
$gradient-header: linear-gradient(90deg, rgba(214,248,218,1) 0%, rgba(185,195,254,1) 100%);


//variables
$box-shadow: 10px 0px 20px 2px rgba(0, 0, 0, 0.06);

$box-shadow-blue: 0px 0px 10px 0px rgba(134,186,246,1);

$box-shadow-standard: 10px 10px 6px 0px rgba(0,0,0,0.16);

$box-shadow-left: -10px 0px 20px 2px rgba(0, 0, 0, 0.06);
$clip-path: polygon(0 0, 100% 0, 100% 100%, 0 calc(100% - 7vw));

$box-shadow-block: 3px 3px 6px 1px rgba(0,0,0,0.16);;


//h
h1, h2, h3, h4, h5, h6, p, span, a, td, input, label, textarea, select, option, button {margin: 0; padding: 0;}
h1, h2, h3, h4, h5 {font-family: 'Bold', sans-serif; color: $black}
p, span, td, th, a, label, textarea, input, h6, select, option, button {font-family: 'Regular', sans-serif; color: $text;}
thead {
	tr {
		td { font-size: 12pt; color: $text;}
	}
}
h1 {font-size: 38pt; line-height: 30pt}
h2 {font-size: 34px; line-height: 26pt; font-weight: 100;}
h3 {font-size: 26pt; font-weight: 100;}
h4 {font-size: 18pt;}
h5 {font-size: 14pt}
h6 {font-size: 12pt;}
p, td, a, label, input, textarea, button {font-size: 12pt;}
th {font-size: 12pt; color: #000;}
span {font-size: 12pt}


@media (max-width: 768px) {
	h1 {font-size: 22pt}
	h2 {font-size: 18pt}
	h3 {font-size: 16pt}
	h4 {font-size: 14pt}
	h5 {font-size: 12pt}
	p, span {font-size: 12pt}
}

.p-86-0-50-0 {padding: 86px 0 50px 0;}

.m0 {margin: 0;}
.p0 {padding: 0;}
.pl0 {padding-left: 0;}
.mt0 {margin-top: 0}
.p10 {padding: 10px}
.pt6 {padding-top: 6px;}
.pb6 {padding-bottom: 6px;}
.pt10 {padding-top: 10px}
.pb10 {padding-bottom: 10px}
.pr10 {padding-right: 10px}
.pl10 {padding-left: 10px}
.p20 {padding: 20px}
.pt20 {padding-top: 20px}
.pb20 {padding-bottom: 20px}
.pr20 {padding-right: 20px}
.pl20 {padding-left: 20px}
.p30 {padding: 30px}
.pt30 {padding-top: 30px}
.pb30 {padding-bottom: 30px}
.pr30 {padding-right: 30px}
.pl30 {padding-left: 30px}
.p40 {padding: 40px}
.pt40 {padding-top: 40px}
.pb40 {padding-bottom: 40px}
.pr40 {padding-right: 40px}
.pl40 {padding-left: 40px}
.m10 {margin: 10px}
.mt10 {margin-top: 10px}
.mb10 {margin-bottom: 10px}
.mr10 {margin-right: 10px}
.ml10 {margin-left: 10px}
.m20 {margin: 20px}
.mt20 {margin-top: 20px}
.mb20 {margin-bottom: 20px}
.mr20 {margin-right: 20px}
.ml20 {margin-left: 20px}
.m30 {margin: 30px}
.mt30 {margin-top: 30px}
.mb30 {margin-bottom: 30px}
.mr30 {margin-right: 30px}
.ml30 {margin-left: 30px}
.m40 {margin: 40px !important}
.mt40 {margin-top: 40px !important}
.mb40 {margin-bottom: 40px !important}
.mr40 {margin-right: 40px !important}
.ml40 {margin-left: 40px !important}
.mb80 {margin-bottom: 80px}
.mt80 {margin-top: 80px}

.pt0 {padding-top: 0 !important}

.relative {position: relative;}
.absolute {position: absolute;}

.cl-black {color: #000;}

.uppper-case {text-transform: uppercase;}
.text-align-center {text-align: center;}
.text-align-end {text-align: end;}
.no-undrln {text-decoration: none;}
.undrln {text-decoration: underline;}

.bg-transparent {
	background-color: transparent;
}

.d-flex {display: flex;}
.d-block {display: block;}
.flex-wrap {flex-wrap: wrap;}
.row {display:flex; flex-direction: row}
.column {display:flex; flex-direction: column}
.spacebetween {justify-content: space-between}
.spaceevenly {justify-content: space-evenly}
.justify-center {justify-content: center}
.aligncenter {align-items: center}
.alignflexend {align-items: flex-end}
.alignflexstart {align-items: flex-start;}
.flex {display: flex}

.width-100 {width: 100%;}

.font-weight-500 {font-weight: 500;}
.font-weight-bold {font-weight: bold;}


$grid-breakpoints: (
  xs: 0,
  sm: 576px,
  md: 768px,
  lg: 992px,
  xl: 1200px
) !default;

@include _assert-ascending($grid-breakpoints, "$grid-breakpoints");
@include _assert-starts-at-zero($grid-breakpoints, "$grid-breakpoints");

$print-body-min-width:              map-get($grid-breakpoints, "lg") !default;
